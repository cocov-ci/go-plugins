name: Test

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      COCOV_REPOSITORY_TOKEN: ${{ secrets.COCOV_REPOSITORY_TOKEN }}
      COCOV_API_URL: ${{ secrets.COCOV_API_URL }}

    steps:
      - name: Set up Go 1.19
        uses: actions/setup-go@v2
        with:
          go-version: 1.19.4

      - name: Grant access to private Go Modules
        run: git config --global url."https://oauth2:${{ secrets.GO_SDK_CLONE_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Install golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.50.1

      - name: Install revive
        run: go install github.com/mgechev/revive@latest

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Check out to repository
        uses: actions/checkout@v3

      - name: Prepare coverage-reporter
        run: |
          curl -sSL https://vito.io/private/coverage-reporter > .coverage-reporter
          chmod +x .coverage-reporter
          ./.coverage-reporter prepare

      - name: Run tests
        run: |
          script/test

      - name: Push coverage report
        run: ./.coverage-reporter submit

  build:
    if: github.ref == 'refs/heads/master'
    needs: test

    runs-on: ubuntu-latest

    steps:
      - name: Check out to repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Run script/build
        run: |
          script/build --build-arg go_token=${{ secrets.GO_SDK_CLONE_TOKEN }}
